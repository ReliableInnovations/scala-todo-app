[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\el-ra\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\el-ra\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.6 (Oracle Corporation Java 21.0.2)
[debug] Load.defaultLoad until apply took 213.2438ms
[debug]           Load.loadUnit: plugins took 199.2753ms
[debug]           Load.loadUnit: defsScala took 1.111ms
[debug] [Loading] Scanning directory C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app\project
[debug]             Load.loadUnit: mkEval took 41.2333ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.2302 ms
[info] loading settings for project scala-to-do-app-build from idea.sbt...
[debug]               Load.resolveProject(scala-to-do-app-build) took 64.9321ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-to-do-app-build, base: C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app\project, plugins: List(<none>))) took 100.7768ms
[debug] [Loading] Done in C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app\project, returning: (scala-to-do-app-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4583.1097ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.5443ms
[debug]         Load.loadUnit(file:/C:/Users/el-ra/softwareProjekte/scala-to-do-app/scala-to-do-app/project/, ...) took 4818.5411ms
[debug]       Load.apply: load took 5048.7578ms
[debug]       Load.apply: resolveProjects took 7.8068ms
[debug]       Load.apply: finalTransforms took 103.4934ms
[debug]       Load.apply: config.delegates took 12.3311ms
[debug]       Load.apply: Def.make(settings)... took 672.1708ms
[debug]       Load.apply: structureIndex took 182.8368ms
[debug]       Load.apply: mkStreams took 2.5986ms
[info] loading project definition from C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9132.9055ms
[debug]     Load.loadUnit: defsScala took 0.0082ms
[debug] [Loading] Scanning directory C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app
[debug]       Load.loadUnit: mkEval took 0.5581ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5467 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 79.5308ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app, plugins: List(<none>))) took 85.2811ms
[debug] [Loading] Done in C:\Users\el-ra\softwareProjekte\scala-to-do-app\scala-to-do-app, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2695.1972ms
[debug]     Load.loadUnit: cleanEvalClasses took 45.5008ms
[debug]   Load.loadUnit(file:/C:/Users/el-ra/softwareProjekte/scala-to-do-app/scala-to-do-app/, ...) took 11877.8487ms
[debug] Load.apply: load took 11918.9261ms
[debug] Load.apply: resolveProjects took 0.3452ms
[debug] Load.apply: finalTransforms took 61.5081ms
[debug] Load.apply: config.delegates took 1.2321ms
[debug] Load.apply: Def.make(settings)... took 158.884ms
[debug] Load.apply: structureIndex took 38.5551ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to scala-to-do-app (in build file:/C:/Users/el-ra/softwareProjekte/scala-to-do-app/scala-to-do-app/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 12292 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 12292, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala-to-do-app (in build file:/C:/Users/el-ra/softwareProjekte/scala-to-do-app/scala-to-do-app/)
[debug] > Exec(idea-shell, None, None)
